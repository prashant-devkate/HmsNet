@model HmsNet.UI.Models.ItemListViewModel

@{
    ViewBag.Title = "Hotel Billing Software";
}

<div class="container-fluid p-0">
    <div class="row no-gutters">
        <!-- Rooms (Left Side - L-Shaped) -->
        <div class="col-md-3" style="height: 100vh; overflow-y: auto;">
            <div class="main-content" style="background-color: #f5f5f5; padding: 5px;">
                <h4 style="background-color: #e0e0e0; padding: 5px;">Running Tables: @Model.RoomsByType.Values.Sum(rooms => rooms.Count)</h4>
                @foreach (var roomType in Model.RoomsByType.Keys.OrderBy(k => k))
                {
                    <div style="background-color: #ffffe0; padding: 5px; margin-top: 5px; display: flex; flex-wrap: wrap; gap: 2px;">
                        <h5 style="color: #32cd32; width: 100%; margin-bottom: 5px;">@roomType.ToUpper()</h5>
                        @foreach (var room in Model.RoomsByType[roomType])
                        {
                            var buttonColor = room.Status == "Available" ? "#32cd32" : "#ff4500";
                            <button style="background-color: @buttonColor; color: white; margin: 0; width: 60px; height: 40px; flex: 0 0 auto;" title="Room: @room.RoomName, Capacity: @room.Capacity">@room.RoomName</button>
                        }
                    </div>
                }
            </div>
        </div>

        <!-- Cart (Middle) -->
        <div class="col-md-6" style="height: 50vh; overflow-y: auto;">
            <div class="billing-section" style="background-color: #f0f0f0; padding: 10px;">
                <table id="cartTable" style="width: 100%; border-collapse: collapse;">
                    <thead>
                        <tr style="background-color: #ffa500; color: white;">
                            <th style="padding: 5px; border: 1px solid #ddd;">CODE</th>
                            <th style="padding: 5px; border: 1px solid #ddd;">ITEM NAME</th>
                            <th style="padding: 5px; border: 1px solid #ddd;">QTY</th>
                            <th style="padding: 5px; border: 1px solid #ddd;">RATE</th>
                            <th style="padding: 5px; border: 1px solid #ddd;">ACTION</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" /></td>
                            <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" value="No Item Name" /></td>
                            <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" placeholder="Qty" /></td>
                            <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" placeholder="Rate" /></td>
                            <td style="border: 1px solid #ddd;"><button style="background-color: #ff4500; color: white; padding: 5px;" onclick="removeRow(this)">Remove</button></td>
                        </tr>
                    </tbody>
                </table>
                <div style="margin-top: 10px;">
                    <button style="background-color: #ffa500; color: white; padding: 5px 10px; margin-right: 5px;">KOT</button>
                    <button style="background-color: #ffa500; color: white; padding: 5px 10px; margin-right: 5px;">CL</button>
                    <button style="background-color: #ffa500; color: white; padding: 5px 10px; margin-right: 5px;">Print BILL</button>
                    <button style="background-color: #ff4500; color: white; padding: 5px 10px;">Cancel</button>
                </div>
                <div style="margin-top: 10px;">
                    <label style="margin-right: 10px;">Dis. Amt:</label>
                    <input type="text" style="width: 100px; padding: 5px; display: inline;" />
                    <label style="margin-left: 10px; margin-right: 10px;">Amount</label>
                    <input type="text" style="width: 100px; padding: 5px; display: inline;" />
                </div>
            </div>
        </div>

        <!-- Item List (Right Side) -->
        <div class="col-md-3">
            <div class="item-list" style="background-color: #e0e0e0; padding: 10px;">
                <select id="itemSelect" style="width: 100%; height: 300px;" multiple>
                    @if (Model != null && Model.Items.Any())
                    {
                        @foreach (var item in Model.Items)
                        {
                            <option value="@item.ItemId" data-rate="@item.Rate">@item.ItemName</option>
                        }
                    }
                </select>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('itemSelect').addEventListener('change', function () {
        const selectedOptions = Array.from(this.selectedOptions);
        const tbody = document.querySelector('#cartTable tbody');

        selectedOptions.forEach(option => {
            const itemName = option.textContent;
            const itemId = option.value;
            const rate = option.getAttribute('data-rate');

            let existingRow = Array.from(tbody.querySelectorAll('tr')).find(row =>
                row.querySelector('td:nth-child(2) input').value === itemName
            );

            if (!existingRow) {
                const newRow = document.createElement('tr');
                newRow.innerHTML = `
                    <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" value="${itemId}" readonly></td>
                    <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" value="${itemName}" readonly></td>
                    <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" value="1" onchange="updateAmount(this)"></td>
                    <td style="border: 1px solid #ddd;"><input type="text" style="width: 100%; padding: 5px;" value="${rate}" readonly></td>
                    <td style="border: 1px solid #ddd;"><button style="background-color: #ff4500; color: white; padding: 5px;" onclick="removeRow(this)">Remove</button></td>
                `;
                tbody.appendChild(newRow);
            } else {
                const qtyInput = existingRow.querySelector('td:nth-child(3) input');
                let qty = parseInt(qtyInput.value) || 0;
                qtyInput.value = qty + 1;
                updateAmount(qtyInput);
            }
        });

        this.selectedOptions.forEach(option => option.selected = false);
        updateTotal();
    });

    function updateAmount(input) {
        const row = input.parentElement.parentElement;
        const qty = parseInt(input.value) || 0;
        const rateInput = row.querySelector('td:nth-child(4) input');
        const rate = parseFloat(rateInput.value) || 0;
        const amount = qty * rate;
        updateTotal();
    }

    function removeRow(button) {
        const row = button.parentElement.parentElement;
        row.remove();
        updateTotal();
    }

    function updateTotal() {
        const rows = document.querySelectorAll('#cartTable tbody tr');
        let total = 0;
        rows.forEach(row => {
            const qty = parseInt(row.querySelector('td:nth-child(3) input').value) || 0;
            const rate = parseFloat(row.querySelector('td:nth-child(4) input').value) || 0;
            total += qty * rate;
        });
        document.querySelector('input[placeholder="Amount"]').value = total.toFixed(2);
    }
</script>